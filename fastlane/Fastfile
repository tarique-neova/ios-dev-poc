platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Load ASC API Key information to use in subsequent lanes"
  lane :load_asc_api_key do
    app_store_connect_api_key(
      key_id: "WXYFK8CF5D,
      issuer_id: "6701bcf4-21c5-4e25-9fd7-76af487a8e20",
      key_content: "-----BEGIN PRIVATE KEY-----
MIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgz8S6G+oCbY+DlpDO
44h91CyqPHc1f1hDIvO90XyVyi+gCgYIKoZIzj0DAQehRANCAATRh6sKuK3JunOp
Dqvb1xdkwZ3kbmiAueV/XaTNdZ/JNlbOW33ikt7yrA9jCDoukR0mqh1PisbBdCXu
qJmmAkcC
-----END PRIVATE KEY-----",
      is_key_content_base64: true,
      in_house: false # detecting this via ASC private key not currently supported
    )
  end

  desc "Upload Release to App Store"
  lane :upload_release do
    # Get the version number from the project and check against
    # the latest build already available on App Store Connect, then
    # increase the build number by 1. If no build is available
    # for that version, then start at 1
    increment_build_number(
      build_number: app_store_build_number(
        initial_build_number: "$CIRCLE_BUILD_NUM",
        version: get_version_number(xcodeproj: "ios-dev-poc.xcodeproj"),
        live: false
      ),
    )
    # Set up Distribution code signing and build the app
    match(type: "appstore")
    gym(scheme: "ios-dev-poc")
    # Upload the binary to App Store Connect
    app_store_connect_api_key
    deliver(
      submit_for_review: false,
      force: true
    )
  end
end
